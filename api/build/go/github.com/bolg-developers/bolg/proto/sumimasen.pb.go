// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/sumimasen.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SumimasenRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumimasenRequest) Reset()         { *m = SumimasenRequest{} }
func (m *SumimasenRequest) String() string { return proto.CompactTextString(m) }
func (*SumimasenRequest) ProtoMessage()    {}
func (*SumimasenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d32e0f8866184b25, []int{0}
}

func (m *SumimasenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumimasenRequest.Unmarshal(m, b)
}
func (m *SumimasenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumimasenRequest.Marshal(b, m, deterministic)
}
func (m *SumimasenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumimasenRequest.Merge(m, src)
}
func (m *SumimasenRequest) XXX_Size() int {
	return xxx_messageInfo_SumimasenRequest.Size(m)
}
func (m *SumimasenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SumimasenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SumimasenRequest proto.InternalMessageInfo

type SumimasenResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumimasenResponse) Reset()         { *m = SumimasenResponse{} }
func (m *SumimasenResponse) String() string { return proto.CompactTextString(m) }
func (*SumimasenResponse) ProtoMessage()    {}
func (*SumimasenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d32e0f8866184b25, []int{1}
}

func (m *SumimasenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumimasenResponse.Unmarshal(m, b)
}
func (m *SumimasenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumimasenResponse.Marshal(b, m, deterministic)
}
func (m *SumimasenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumimasenResponse.Merge(m, src)
}
func (m *SumimasenResponse) XXX_Size() int {
	return xxx_messageInfo_SumimasenResponse.Size(m)
}
func (m *SumimasenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SumimasenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SumimasenResponse proto.InternalMessageInfo

func (m *SumimasenResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*SumimasenRequest)(nil), "bolg.sumimasen.SumimasenRequest")
	proto.RegisterType((*SumimasenResponse)(nil), "bolg.sumimasen.SumimasenResponse")
}

func init() { proto.RegisterFile("api/sumimasen.proto", fileDescriptor_d32e0f8866184b25) }

var fileDescriptor_d32e0f8866184b25 = []byte{
	// 181 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4e, 0x2c, 0xc8, 0xd4,
	0x2f, 0x2e, 0xcd, 0xcd, 0xcc, 0x4d, 0x2c, 0x4e, 0xcd, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0xe2, 0x4b, 0xca, 0xcf, 0x49, 0xd7, 0x83, 0x8b, 0x2a, 0x09, 0x71, 0x09, 0x04, 0xc3, 0x38, 0x41,
	0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x4a, 0xba, 0x5c, 0x82, 0x48, 0x62, 0xc5, 0x05, 0xf9, 0x79,
	0xc5, 0xa9, 0x42, 0x12, 0x5c, 0xec, 0xb9, 0xa9, 0xc5, 0xc5, 0x89, 0xe9, 0xa9, 0x12, 0x8c, 0x0a,
	0x8c, 0x1a, 0x9c, 0x41, 0x30, 0xae, 0x51, 0x3c, 0x17, 0x27, 0x5c, 0xb9, 0x50, 0x10, 0x32, 0x47,
	0x41, 0x0f, 0xd5, 0x36, 0x3d, 0x74, 0xab, 0xa4, 0x14, 0xf1, 0xa8, 0x80, 0x58, 0xac, 0xc4, 0xe0,
	0x14, 0xc9, 0x25, 0x07, 0x52, 0x15, 0x9f, 0x92, 0x5a, 0x96, 0x9a, 0x93, 0x5f, 0x90, 0x5a, 0x54,
	0x8c, 0xa6, 0xcb, 0x89, 0x0f, 0xae, 0x2d, 0x00, 0xe4, 0xcb, 0x00, 0xc6, 0x28, 0xd5, 0xf4, 0xcc,
	0x92, 0x8c, 0xd2, 0x24, 0xbd, 0xe4, 0xfc, 0x5c, 0x7d, 0x90, 0x62, 0x5d, 0x84, 0x66, 0x30, 0x5f,
	0x1f, 0x1c, 0x1c, 0x49, 0x6c, 0x60, 0xca, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x04, 0x84, 0xfb,
	0x0f, 0x2c, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SumimasenClient is the client API for Sumimasen service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SumimasenClient interface {
	Sumimasen(ctx context.Context, in *SumimasenRequest, opts ...grpc.CallOption) (*SumimasenResponse, error)
}

type sumimasenClient struct {
	cc *grpc.ClientConn
}

func NewSumimasenClient(cc *grpc.ClientConn) SumimasenClient {
	return &sumimasenClient{cc}
}

func (c *sumimasenClient) Sumimasen(ctx context.Context, in *SumimasenRequest, opts ...grpc.CallOption) (*SumimasenResponse, error) {
	out := new(SumimasenResponse)
	err := c.cc.Invoke(ctx, "/bolg.sumimasen.Sumimasen/Sumimasen", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SumimasenServer is the server API for Sumimasen service.
type SumimasenServer interface {
	Sumimasen(context.Context, *SumimasenRequest) (*SumimasenResponse, error)
}

func RegisterSumimasenServer(s *grpc.Server, srv SumimasenServer) {
	s.RegisterService(&_Sumimasen_serviceDesc, srv)
}

func _Sumimasen_Sumimasen_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SumimasenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SumimasenServer).Sumimasen(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bolg.sumimasen.Sumimasen/Sumimasen",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SumimasenServer).Sumimasen(ctx, req.(*SumimasenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Sumimasen_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bolg.sumimasen.Sumimasen",
	HandlerType: (*SumimasenServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sumimasen",
			Handler:    _Sumimasen_Sumimasen_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/sumimasen.proto",
}
